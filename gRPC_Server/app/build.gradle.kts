/*
 * This file was generated by the Gradle "init" task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("com.google.protobuf") version "0.9.5"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)
    // grpc dependencies
    runtimeOnly("io.grpc:grpc-netty-shaded:1.72.0") 
    implementation("io.grpc:grpc-protobuf:1.72.0")
    implementation("io.grpc:grpc-stub:1.72.0")
    compileOnly ("org.apache.tomcat:annotations-api:6.0.53") // necessary for Java 9+
    }

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "grpc_trabajo.App"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

protobuf {
    protoc {
        // Download the Protobuf compiler
        artifact = "com.google.protobuf:protoc:3.25.1"
    }
    plugins {
        // Generate Java code from .proto files
        create("grpc") {
            artifact = "io.grpc:protoc-gen-grpc-java:1.72.0"
        }
    }
    generateProtoTasks {
        ofSourceSet("main").forEach { task ->
            task.builtins {
                // Generate Java code from .proto files
                removeIf{ it.name == "java" }
            }
            task.plugins {
                // Use the gRPC plugin to generate gRPC code
                create("grpc")
            }
        }
    }
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    // Apply the Protobuf plugin for generating Java and gRPC code from .proto files.
    id 'com.google.protobuf' version '0.9.5'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    // This dependency is used by the application.
    implementation libs.guava
    
    // gRPC dependencies
    runtimeOnly 'io.grpc:grpc-netty-shaded:1.72.0'
    implementation 'io.grpc:grpc-protobuf:1.72.0'
    implementation 'io.grpc:grpc-stub:1.72.0'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'grpc_client.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

protobuf {
    protoc {
        // Download the Protobuf compiler
        artifact = 'com.google.protobuf:protoc:3.25.1'
    }
    plugins {
        // Configure the gRPC plugin
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.72.0'
        }
    }
    generateProtoTasks {
        // For each proto generation task, remove the default Java generation and add gRPC
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}